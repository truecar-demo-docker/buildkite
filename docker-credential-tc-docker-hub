#!/usr/bin/env python3

import boto3
import base64
import json
import sys


DOCKER_HUB_SERVER_URL = 'https://index.docker.io/v1/'
PARAM_NAME = '/infra/ami-docker-hub-login'


def errprint(*args, **kwargs):
    print(*args, file=sys.stderr, **kwargs)


def fetch_credentials(server):
    ssm_client = boto3.client('ssm')
    get_param_resp = ssm_client.get_parameter(
        Name=PARAM_NAME,
        WithDecryption=True
    )

    b64value = get_param_resp['Parameter']['Value']

    # by convention this is base64(user:pass)
    user_pass = base64.b64decode(b64value).decode('utf8')
    user, pw = user_pass.split(':', 1)

    output = {
        'ServerURL': server,
        'Username': user,
        'Secret': pw
    }
    return output


def main():
    if len(sys.argv) < 2:
        errprint(f'Usage: {sys.argv[0]} get/store/erase/list/version ...')
        sys.exit(1)

    cmd = sys.argv[1]
    if cmd == 'get':
        server_lines = sys.stdin.readlines()
        if len(server_lines) != 1:
            errprint(f'Usage: {sys.argv[0]} get <<< "registry-url"')
            sys.exit(1)

        server = server_lines[0]
        if server != DOCKER_HUB_SERVER_URL:
            errprint(f'no credentials for {server}')
            sys.exit(1)

        output = fetch_credentials(server)
        print(json.dumps(output))
    elif cmd == 'store':
        # ignore
        pass
    elif cmd == 'list':
        errprint('not implemented')
        sys.exit(1)
    elif cmd == 'erase':
        errprint('not implemented')
        sys.exit(1)
    elif cmd == 'version':
        print('0.0.1')
    else:
        errprint('unknown command')
        sys.exit(1)


if __name__ == '__main__':
    main()
